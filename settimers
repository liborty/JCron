#!/bin/bash
# takes six arguments for setting up dtimer.js.
# the last one is a script to be invoked by crontab
# generates cronfile cronf and starts crontab with it

if [ $# -ne 6 ]; then
	printf "$0: expects six arguments: basefile hourset minset frequency serverdelay and a scriptstring"
	exit 2
fi

if [ $3 -ge $4 ]; then
	printf "$0: Minutes offset $3 must be less than gap $4\n"
	exit 2
fi

# get the parent directory
PD=$( dirname $( dirname $(readlink -f $0) ) )

# add the first line to dtimer.js
printf "%s\n%s\n" "var timermod = ( function( hourset = $2, minset = $3, mingap = $4, serverdelay = $5)" \
"$( cat $PD/www-share/stubtimer.js )" > $PD/web/dtimer.js

# initialise crontab for the same times
printf "TZ=UTC\n" > $PD/data/$1.cronf
if [ $4 -gt 0 ] && [[ $4 -lt 60 ]]; then # valid mingap
	if  [ $2 -gt -1 ] && [[ $2 -lt 24 ]]; then  # valid hourset 0-23
		printf "$3-59/$4 $2 * * * $6\n" >> $PD/data/$1.cronf # sets minset/mingap hourset
	else 
		printf "$3-59/$4 * * * * $6\n" >> $PD/data/$1.cronf # sets minset/mingap for all hours *
	fi
elif [ $2 -gt -1 ] && [[ $2 -lt 24 ]]; then # no sub-hour repetitions and valid hourset 0-23
	printf "$3 $2 * * * $6\n" >> $PD/data/$1.cronf # sets minset after the hourset
else 
	printf "$3 * * * * $6\n" >> $PD/data/$1.cronf # sets minset for all hours *
fi

crontab $PD/data/$1.cronf
printf "Started crontab at: %s\n" $( date -u +%X )
printf "$( crontab -l )\n"
